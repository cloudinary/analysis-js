/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AnalyzeCldFashionResponse =
  | components.AnalyzeCldFashionResponse
  | components.AsyncOperationAcceptedResponse;

/** @internal */
export const AnalyzeCldFashionResponse$inboundSchema: z.ZodType<
  AnalyzeCldFashionResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.AnalyzeCldFashionResponse$inboundSchema,
  components.AsyncOperationAcceptedResponse$inboundSchema,
]);

/** @internal */
export type AnalyzeCldFashionResponse$Outbound =
  | components.AnalyzeCldFashionResponse$Outbound
  | components.AsyncOperationAcceptedResponse$Outbound;

/** @internal */
export const AnalyzeCldFashionResponse$outboundSchema: z.ZodType<
  AnalyzeCldFashionResponse$Outbound,
  z.ZodTypeDef,
  AnalyzeCldFashionResponse
> = z.union([
  components.AnalyzeCldFashionResponse$outboundSchema,
  components.AsyncOperationAcceptedResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnalyzeCldFashionResponse$ {
  /** @deprecated use `AnalyzeCldFashionResponse$inboundSchema` instead. */
  export const inboundSchema = AnalyzeCldFashionResponse$inboundSchema;
  /** @deprecated use `AnalyzeCldFashionResponse$outboundSchema` instead. */
  export const outboundSchema = AnalyzeCldFashionResponse$outboundSchema;
  /** @deprecated use `AnalyzeCldFashionResponse$Outbound` instead. */
  export type Outbound = AnalyzeCldFashionResponse$Outbound;
}

export function analyzeCldFashionResponseToJSON(
  analyzeCldFashionResponse: AnalyzeCldFashionResponse,
): string {
  return JSON.stringify(
    AnalyzeCldFashionResponse$outboundSchema.parse(analyzeCldFashionResponse),
  );
}

export function analyzeCldFashionResponseFromJSON(
  jsonString: string,
): SafeParseResult<AnalyzeCldFashionResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AnalyzeCldFashionResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AnalyzeCldFashionResponse' from JSON`,
  );
}
